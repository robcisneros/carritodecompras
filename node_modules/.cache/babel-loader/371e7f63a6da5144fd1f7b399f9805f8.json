{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INT1342\\\\Documents\\\\DesarrolloWeb\\\\curso-react\\\\react_5_mealsProject\\\\mealproject\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    address: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const addressInputRef = useRef();\n  const cpInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredPostalCode = cpInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const addressIsValid = !isEmpty(enteredAddress);\n    const postalCodeIsValid = !isNotFiveChars(enteredPostalCode);\n    const cityIsValid = !isEmpty(enteredCity);\n    const formIsValid = nameIsValid && addressIsValid && postalCodeIsValid && cityIsValid;\n    setFormValidity({\n      name: nameIsValid,\n      address: addressIsValid,\n      postalCode: postalCodeIsValid,\n      city: cityIsValid\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        ref: nameInputRef,\n        children: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        ref: addressInputRef,\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), !formValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cp\",\n        ref: cpInputRef,\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), !formValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid Postal Code (5 char length)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        ref: cityInputRef,\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onCancel,\n        type: \"button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"zRNlBhBeVaz3cNea1d/HIE7zmbA=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_5_mealsProject/mealproject/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isNotFiveChars","length","Checkout","props","formValidity","setFormValidity","name","address","postalCode","city","nameInputRef","addressInputRef","cpInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredPostalCode","enteredCity","nameIsValid","addressIsValid","postalCodeIsValid","cityIsValid","formIsValid","control","invalid","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isNotFiveChars = (value) => value.trim().length !== 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formValidity, setFormValidity] = useState({\r\n    name: true,\r\n    address: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n  const nameInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n  const cpInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n    const enteredPostalCode = cpInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const nameIsValid = !isEmpty(enteredName);\r\n    const addressIsValid = !isEmpty(enteredAddress);\r\n    const postalCodeIsValid = !isNotFiveChars(enteredPostalCode);\r\n    const cityIsValid = !isEmpty(enteredCity);\r\n\r\n    const formIsValid = nameIsValid && addressIsValid && postalCodeIsValid && cityIsValid;\r\n\r\n    setFormValidity({\r\n      name: nameIsValid,\r\n      address:addressIsValid,\r\n      postalCode: postalCodeIsValid,\r\n      city: cityIsValid\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formValidity.name ? '' : classes.invalid }`}>\r\n        <label htmlFor=\"name\" ref={nameInputRef}>\r\n          Your name\r\n        </label>\r\n        <input type=\"text\" id=\"name\"></input>\r\n        {!formValidity.name && <p>Enter a valid name</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"address\" ref={addressInputRef}>\r\n          Address\r\n        </label>\r\n        <input type=\"text\" id=\"address\"></input>\r\n        {!formValidity.address && <p>Enter a valid address</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"cp\" ref={cpInputRef}>\r\n          Postal Code\r\n        </label>\r\n        <input type=\"text\" id=\"cp\"></input>\r\n        {!formValidity.postalCode && <p>Enter a valid Postal Code (5 char length)</p>}\r\n      </div>\r\n      <div className={classes.control}>\r\n        <label htmlFor=\"city\" ref={cityInputRef}>\r\n          City\r\n        </label>\r\n        <input type=\"text\" id=\"city\"></input>\r\n        {!formValidity.city && <p>Enter a valid city</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onCancel} type=\"button\">\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}
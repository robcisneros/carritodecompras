{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INT1342\\\\Documents\\\\DesarrolloWeb\\\\curso-react\\\\react_5_mealsProject\\\\mealproject\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst isNotFiveChars = value => value.trim().length !== 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formValidity, setFormValidity] = useState({\n    name: true,\n    address: true,\n    postalCode: true,\n    city: true\n  });\n  const nameInputRef = useRef();\n  const addressInputRef = useRef();\n  const cpInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredAddress = addressInputRef.current.value;\n    const enteredPostalCode = cpInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const nameIsValid = !isEmpty(enteredName);\n    const addressIsValid = !isEmpty(enteredAddress);\n    const postalCodeIsValid = !isNotFiveChars(enteredPostalCode);\n    const cityIsValid = !isEmpty(enteredCity);\n    setFormValidity({\n      name: nameIsValid,\n      address: addressIsValid,\n      postalCode: postalCodeIsValid,\n      city: cityIsValid\n    });\n    const formIsValid = nameIsValid && addressIsValid && postalCodeIsValid && cityIsValid;\n\n    if (!formIsValid) {\n      return;\n    }\n\n    props.onConfirm(formValidity);\n  };\n\n  const nameControlClasses = `${classes.control} ${formValidity.name ? \"\" : classes.invalid}`;\n  const addressControlClasses = `${classes.control} ${formValidity.address ? \"\" : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${formValidity.postalCode ? \"\" : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${formValidity.city ? \"\" : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), !formValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: addressControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        ref: addressInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !formValidity.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cp\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cp\",\n        ref: cpInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), !formValidity.postalCode && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid Postal Code (5 char length)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cityControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !formValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enter a valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onCancel,\n        type: \"button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"zRNlBhBeVaz3cNea1d/HIE7zmbA=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/INT1342/Documents/DesarrolloWeb/curso-react/react_5_mealsProject/mealproject/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isNotFiveChars","length","Checkout","props","formValidity","setFormValidity","name","address","postalCode","city","nameInputRef","addressInputRef","cpInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredAddress","enteredPostalCode","enteredCity","nameIsValid","addressIsValid","postalCodeIsValid","cityIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","addressControlClasses","postalCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\nconst isNotFiveChars = (value) => value.trim().length !== 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formValidity, setFormValidity] = useState({\r\n    name: true,\r\n    address: true,\r\n    postalCode: true,\r\n    city: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const addressInputRef = useRef();\r\n  const cpInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredAddress = addressInputRef.current.value;\r\n    const enteredPostalCode = cpInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const nameIsValid = !isEmpty(enteredName);\r\n    const addressIsValid = !isEmpty(enteredAddress);\r\n    const postalCodeIsValid = !isNotFiveChars(enteredPostalCode);\r\n    const cityIsValid = !isEmpty(enteredCity);\r\n\r\n    setFormValidity({\r\n      name: nameIsValid,\r\n      address: addressIsValid,\r\n      postalCode: postalCodeIsValid,\r\n      city: cityIsValid,\r\n    });\r\n\r\n    const formIsValid =\r\n      nameIsValid && addressIsValid && postalCodeIsValid && cityIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm(formValidity);\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${\r\n    formValidity.name ? \"\" : classes.invalid\r\n  }`;\r\n  const addressControlClasses = `${classes.control} ${\r\n    formValidity.address ? \"\" : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    formValidity.postalCode ? \"\" : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    formValidity.city ? \"\" : classes.invalid\r\n  }`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor=\"name\">Your name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef}></input>\r\n        {!formValidity.name && <p>Enter a valid name</p>}\r\n      </div>\r\n      <div className={addressControlClasses}>\r\n        <label htmlFor=\"address\">Address</label>\r\n        <input type=\"text\" id=\"address\" ref={addressInputRef}></input>\r\n        {!formValidity.address && <p>Enter a valid address</p>}\r\n      </div>\r\n      <div className={postalCodeControlClasses}>\r\n        <label htmlFor=\"cp\">Postal Code</label>\r\n        <input type=\"text\" id=\"cp\" ref={cpInputRef}></input>\r\n        {!formValidity.postalCode && (\r\n          <p>Enter a valid Postal Code (5 char length)</p>\r\n        )}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef}></input>\r\n        {!formValidity.city && <p>Enter a valid city</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onCancel} type=\"button\">\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}